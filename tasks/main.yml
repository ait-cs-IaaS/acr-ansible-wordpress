---
# tasks file for wordpress


- name: Updating apt-Cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes
  tags: [install]


- name: Install MariaDB
  include_role:
    name: mariadb
    apply:
      tags: [install]
  vars: 
    mariadb_databases: 
    - name: "{{ wp_mysqldb_dbname }}"
    mariadb_users:
    - {
      name: "{{ wp_mysqldb_user }}",
      host: "{{ wp_mysqldb_host }}",
      password: "{{ wp_mysqldb_password }}",
      privileges: "{{ wp_mysqldb_dbname }}.*:ALL,GRANT"
      }
  tags: [install]


- name: Install apache2
  include_role:
    name: apache2
    apply:
      tags: [install]
  vars: 
    apache2_packages: "{{ [libapache2_mod_version] }}"
    apache2_modules: "{{ wp_apache_modules }}"
    apache2_vhosts:
      - name: "{{ wp_apache_hostname }}"
        aliases: "{{ wp_apache_aliases }}"
        http: true
        https: "{{ wp_apache_ssl | default(False) }}"
        cert: "{{ wp_apache_ssl_cert | default('ssl-cert-snakeoil.pem') }}"
        key: "{{ wp_apache_ssl_key | default('ssl-cert-snakeoil.key') }}"
        copycerts: "{{ wp_apache_ssl_copycerts | default(False) }}"
        vhost_template: "{{ wp_apache_vhost_template | default(omit) }}"
    apache2_ssl_cert_path: "{{ wp_apache_ssl_cert_path | default('/etc/ssl/certs') }}"
    apache2_ssl_key_path: "{{ wp_apache_ssl_key_path | default('/etc/ssl/private') }}"
  tags: [install]


- name: Install required packages
  package:
      name: "{{ wp_required_packages }}"
      state: present
  tags: [install]


# -----------------------------------------------------------------------
# Install wordpress & configure apache
# -----------------------------------------------------------------------


- name: Check WordPress installation
  shell: grep -oE "wp_version = '(.?*)';" wp-includes/version.php | cut -d "'" -f2
  args:
    chdir: "{{ wp_path}}"
  register: wp_current_version
  tags: [install]

- name: Check Result
  debug: msg="{{ ('WordPress version {} is currently installed.'.format(wp_current_version.stdout) 
              if (wp_current_version.stdout|length > 0) 
              else ('WordPress is not installed. Downloading ...') ) }}"
  tags: [install]

- name: Check latest Wordpress version available
  shell: curl -s 'https://api.wordpress.org/core/version-check/1.7/' | grep -Po '"version":.*?",' | head -n 1 | cut -d '"' -f4
  register: wp_latest_available
  args:
    warn: false
  when: wp_version == 'latest'
  tags: [install]

- set_fact: 
    wp_control_version: "{{ wp_version if (wp_version != 'latest') else (wp_latest_available.stdout) }}"

- set_fact: 
    wp_install: "{{ false if (wp_current_version.stdout == wp_control_version) else (true) }}"

- name: Execute (re-)install
  debug: msg="Downloading and installing Wordpress version {{ wp_version }} ..."
  when: wp_install 
  tags: [install]
  

- name: Download WordPress {{ wp_version }} 
  get_url: 
    url: "{{ 'https://wordpress.org/latest.tar.gz' if (item == 'latest') else ( 'https://wordpress.org/wordpress-{}.tar.gz'.format(item) ) }}" 
    dest: /tmp/wordpress.tar.gz
    validate_certs: no
  with_items: "{{ wp_version }}"
  when: wp_install 
  tags: [install]

- name: Remove current version
  file:
    state: absent
    path: "{{ wp_path }}/" 
  when: wp_install 
  tags: [install]


- name: Extract WordPress  
  unarchive: 
    src: /tmp/wordpress.tar.gz 
    dest: /tmp/
    copy: no
  when: wp_install 
  tags: [install]


- name: Copy wordpress files
  copy: 
    remote_src: True
    src: /tmp/wordpress/
    dest: "{{ wp_path }}" 
  when: wp_install 
  tags: [install]


- name: Remove tmp files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/wordpress"
    - "/tmp/wordpress.tar.gz"
  when: wp_install 
  tags: [install]


- name: Wordpress config
  template:
    src: wp-config.php.j2
    dest: "{{ wp_path }}/wp-config.php"
  tags: [install]


- name: Change ownership of installation directory
  file: 
    path: "{{ wp_path }}"
    owner: "{{ wp_sys_user }}" 
    group: "{{ wp_sys_usergroup }}" 
    state: directory 
    recurse: yes 
    setype: httpd_sys_content_t
  tags: [install]


- name: Install wp-cli
  get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: "{{ wp_cli_dir }}"
    force: true
    owner: root
    group: root
    mode: 0755
  tags: [install]


# -----------------------------------------------------------------------
# Create content  
# -----------------------------------------------------------------------


- name: Install wp-core
  become: yes
  become_user: "{{ wp_sys_user }}"
  command: >
    wp-cli core install
    --allow-root 
    --path='{{ wp_path }}'
    --url='{{ wp_host }}'  
    --title='{{ wp_title }}'
    --admin_name='{{ wp_admin_name }}'
    --admin_email='{{ wp_admin_email }}'
    --admin_password='{{ wp_admin_password }}'
  tags: [install]

- include: wp_empty_site.yml
  tags: [config]

- include: wp_themes.yml
  tags: [config]

- include: wp_options.yml
  tags: [config]

- include: wp_plugins.yml
  tags: [config]

- include: wp_users.yml
  tags: [config]

- include: wp_categories.yml
  tags: [config]

- include: wp_create_posts.yml
  tags: [config]